/*!
 * RamState JavaScript Library v1.0.0
 * https://github.com/ramjam97/ram-state-js
 * Date: 2024-07-26T16:46:19.944Z
 */
class RamState{#a;#b;constructor(e){this.#a=e,this.#b=[]}set(e){let t=this.#a;"function"==typeof e&&(e=e(this.#c(t))),this.#d(t,e)||(this.#a=this.#c(e),this.#e(e,t))}get(){return this.#c(this.#a)}get value(){return this.#c(this.#a)}watch(e){"function"==typeof e?this.#b.push(e):console.warn("Callback provided to watch is not a function")}#e(e,t){this.#b.forEach(i=>{try{i(e,t)}catch(s){console.error("Error in side effect callback:",s)}})}#d(i,s){return JSON.stringify(i)===JSON.stringify(s)}#c(n,r=new WeakMap){if(Object(n)!==n)return n;if(n instanceof Date)return new Date(n);if(n instanceof RegExp)return RegExp(n);if(n instanceof Set)return new Set([...n].map(e=>this.#c(e,r)));if(n instanceof Map)return new Map([...n].map(([e,t])=>[this.#c(e,r),this.#c(t,r)]));if(r.has(n))return r.get(n);let a=Array.isArray(n)?[]:Object.create(Object.getPrototypeOf(n));return r.set(n,a),Object.assign(a,...Object.keys(n).map(e=>({[e]:this.#c(n[e],r)})))}}