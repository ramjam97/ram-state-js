/*!
 * RamStateJs JavaScript Library v1.6.0
 * https://github.com/ramjam97/ram-state-js
 * Date: 2025-02-27
 * 
 * A lightweight state management library for Vanilla JavaScript with deep cloning, change detection,
 * and subscription-based updates. Handles complex data types (Set/Map/Date/RegExp)
 * and circular references.
*/ class RamState{#a;#b;#c;#d;#e;#f;constructor(t){if("function"==typeof t)throw Error("Initial state cannot be a function.");this.#a=this.#g(t),this.#b=this.#g(t),this.#c=!1,this.#d=[],this.#e=[],this.#f=0}set(t){let e=this.#b,n="function"==typeof t?t(this.#g(e)):t;this.#b=this.#g(n),this.#c=!this.#h(e,this.#b),this.#c&&(this.#f+=1),this.#i(),this.#c&&this.#j()}get(){return this.#g(this.#b)}get data(){return this.get()}get hasChange(){return this.#c}get version(){return this.#f}onSet(t,e=!1){if("function"==typeof t){if(this.#d.push(t),e)try{t(this.#k())}catch(n){console.error("Error in initial onSet callback:",n)}}else console.warn("Callback provided to onSet is not a function")}onChange(t,e=!1){if("function"==typeof t){if(this.#e.push(t),e)try{t(this.#l())}catch(n){console.error("Error in initial onChange callback:",n)}}else console.warn("Callback provided to onChange is not a function")}watch(t){return this.onSet(t,!0)}trigger(t=null){this.triggerSet(t),this.#c&&this.triggerChange()}triggerSet(t=null){this.#c=null===t?this.#c:Boolean(t),this.#i()}triggerChange(){this.#j()}reset(t=null){let e=this.#b;t=null===t?this.#g(this.#a):this.#g(t),this.#c=!this.#h(e,t),this.#c&&(this.#f+=1),this.#b=t,this.#i(),this.#c&&this.#j()}#k(){return{hasChange:this.#c,data:this.#b,version:this.#f}}#l(){return{data:this.#b,version:this.#f}}#i(){this.#d.forEach(t=>{try{t(this.#k())}catch(e){console.error("Error in onSet callback:",e)}})}#j(){this.#e.forEach(t=>{try{t(this.#l())}catch(e){console.error("Error in onChange callback:",e)}})}#h(t,e){if(t===e)return!0;if(t instanceof Set&&e instanceof Set)return t.size===e.size&&[...t].every(t=>e.has(t));if(t instanceof Map&&e instanceof Map){if(t.size!==e.size)return!1;for(let[n,i]of t)if(!e.has(n)||!this.#h(i,e.get(n)))return!1;return!0}if(t instanceof Date&&e instanceof Date)return t.getTime()===e.getTime();if(t instanceof RegExp&&e instanceof RegExp)return t.toString()===e.toString();if("object"!=typeof t||"object"!=typeof e||null===t||null===e)return!1;let s=Object.keys(t),a=Object.keys(e);return s.length===a.length&&s.every(n=>a.includes(n)&&this.#h(t[n],e[n]))}#g(h,r=new WeakMap){if(structuredClone)return structuredClone(h);if("object"!=typeof h||null===h)return h;if(r.has(h))return r.get(h);let o;if(h instanceof Date)o=new Date(h.getTime());else if(h instanceof RegExp)o=RegExp(h.source,h.flags);else if(h instanceof Set)o=new Set([...h].map(t=>this.#g(t,r)));else if(h instanceof Map)o=new Map([...h].map(([t,e])=>[this.#g(t,r),this.#g(e,r)]));else for(let l in o=Array.isArray(h)?[]:Object.create(Object.getPrototypeOf(h)),r.set(h,o),h)h.hasOwnProperty(l)&&(o[l]=this.#g(h[l],r));return o}}