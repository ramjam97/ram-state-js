/*!
 * RamStateJs v2.4.0
 * Description: RamStateJs is a lightweight state management library for vanilla JavaScript. It provides a simple API to manage local and global state with watchers, effects, and DOM binding, inspired by Reactâ€™s useState and useEffect.
 * Author: Ram Jam
 * GitHub: https://github.com/ramjam97/ram-state-js
 * Build Date: 2025-09-15 18:36:23 (Asia/Manila)
 */
function RamState(e={}){const n=new Set,t=function(){let e=new Set,n=!1;function t(){n=!0,e.forEach(e=>e()),e.clear(),n=!1}return function(a){e.add(a),n||Promise.resolve().then(t)}}();const a=(e,n)=>{if(e===n)return!0;if(typeof e!=typeof n)return!1;if(Array.isArray(e)&&Array.isArray(n))return e.length===n.length&&e.every((e,t)=>a(e,n[t]));if(e&&n&&"object"==typeof e){const t=Object.keys(e),c=Object.keys(n);return t.length===c.length&&t.every(t=>a(e[t],n[t]))}return!1},c=(e,n)=>{try{const t=n?e(n):e();return"function"==typeof t?t:null}catch(e){return console.error("RamState callback error:",e),null}},l=e=>{try{"function"==typeof e&&e()}catch(e){console.error("RamState cleanup error:",e)}};return(e.debug??1)&&console.log("RamState v2.4.0 initialized ðŸš€"),{useState:function(e,t=null){let o=e;const u={always:[],onChange:[]},s=t?document.querySelector(t):null;s&&(d(s,o),s.addEventListener("input",()=>{const e=f(s);h.set(e)}),s.addEventListener("change",()=>{const e=f(s);h.set(e)}));const i=e=>({dom:s,value:o,hasChange:e}),r=()=>({dom:s,value:o});function f(e){return e instanceof HTMLInputElement?"checkbox"===e.type?e.checked:e.value:e instanceof HTMLSelectElement?e.multiple?[...e.selectedOptions].map(e=>e.value):e.value:e instanceof HTMLTextAreaElement?e.value:null}function d(e,n){e instanceof HTMLInputElement?"checkbox"===e.type?e.checked=!!n:e.value=n??"":e instanceof HTMLSelectElement?e.multiple&&Array.isArray(n)?[...e.options].forEach(e=>{e.selected=n.includes(e.value)}):e.value=n??"":e instanceof HTMLTextAreaElement&&(e.value=n??"")}const h={dom:s,get value(){return o},set(e){"function"==typeof e&&(e=e(o));const n=!a(o,e);return o=e,s&&d(s,o),u.always.forEach(e=>{l(e.cleanup),e.cleanup=c(e.cb,i(n))}),n&&u.onChange.forEach(e=>{l(e.cleanup),e.cleanup=c(e.cb,r())}),o},watch(e,n=!1){if("function"!=typeof e)return void console.warn("watch callback must be a function");const t={cb:e,cleanup:null};n&&(t.cleanup=c(e,i(!1))),u.always.push(t)},watchEffect(e,n=!1){if("function"!=typeof e)return void console.warn("watchEffect callback must be a function");const t={cb:e,cleanup:null};n&&(t.cleanup=c(e,r())),u.onChange.push(t)}};return n.add(h),h},useEffect:function(e,a=null){if("function"!=typeof e)return void console.warn("useEffect callback must be a function");let o;function u(){l(o),o=c(e)}null==a?n.forEach(e=>e?.watchEffect(()=>t(u))):Array.isArray(a)&&a.forEach(e=>e?.watchEffect(()=>t(u))),u()},useMemo:function(e,n=[]){let a,o={onChange:[]};const u=()=>({value:a});function s(){return a=e(),o.onChange.forEach(e=>{l(e.cleanup),e.cleanup=c(e.cb,u())}),a}n.forEach(e=>e?.watchEffect(()=>t(s)));const i={get value(){return a},watchEffect(e){if("function"!=typeof e)return void console.warn("watchEffect callback must be a function");const n={cb:e,cleanup:null};n.cleanup=c(e,u()),o.onChange.push(n)}};return s(),i},useButton:function(e,t={}){const o={state:{disabled:t?.state?.disabled??!1,loading:t?.state?.loading??!1},disabled:{class:t?.disabled?.class??"disabled"},loading:{html:t?.loading?.html??"",icon:t?.loading?.icon??"",class:t?.loading?.class??"loading"}},u=[...e instanceof HTMLElement?[e]:"string"==typeof e?Array.from(document.querySelectorAll(e)):[]].map(e=>("function"==typeof o.loading.html&&(o.loading.html=o.loading.html(e.innerHTML)),{el:e,default:{html:e.innerHTML},loading:{html:o.loading.html||e.innerHTML,icon:o.loading.icon,class:o.loading.class},disabled:{class:o.disabled.class}})),s=u.map(e=>e.el);let i={disabled:o.state.disabled,loading:o.state.loading};const r={always:[],onChange:[]},f=e=>({dom:s,state:i,hasChange:e}),d=()=>({dom:s,state:i});function h(e){const n=!a(i,e);var t;return i=e,t=i,u.forEach(e=>{const{el:n}=e,a=e.default,c=e.loading,l=e.disabled;n.disabled=t.disabled||t.loading,n.classList.toggle(c.class,t.loading),n.classList.toggle(l.class,t.disabled),n.innerHTML=(t.loading?c.html:a.html)+(t.loading?c.icon:"")}),r.always.forEach(e=>{l(e.cleanup),e.cleanup=c(e.cb,f(n))}),n&&r.onChange.forEach(e=>{l(e.cleanup),e.cleanup=c(e.cb,d())}),i}const p={dom:s,get value(){return i},disabled:(e=!0)=>h({...i,disabled:e}),loading:(e=!0)=>h({...i,loading:e,disabled:e}),watch(e,n=!1){if("function"!=typeof e)return void console.warn("watch callback must be a function");const t={cb:e,cleanup:null};n&&(t.cleanup=c(e,f(!1))),r.always.push(t)},watchEffect(e,n=!1){if("function"!=typeof e)return void console.warn("watchEffect callback must be a function");const t={cb:e,cleanup:null};n&&(t.cleanup=c(e,d())),r.onChange.push(t)}};return n.add(p),p}}}